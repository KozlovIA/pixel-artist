import numpy as np
import statistics as stat
import math
from PIL import Image

def rgb2hex(r, g, b):
    return "#{:02x}{:02x}{:02x}".format(r, g, b)

def hex2fgb(hexcode):
    return tuple([int(hexcode[i:i+2], 16) for i in range(1, 7, 2)])


def hex2int(hexcode):
    return int(hexcode.replace('#', ''), 16)


colors = {
    "Бордовый": (128,0,0),
    "Темно красный": (139,0,0),
    "Коричневый": (165,42,42),
    "Огнеупорный кирпич": (178,34,34),
    "Малиновый": (220,20,60),
    "Красный": (255,0,0),
    "Помидор": (255,99,71),
    "Коралл": (255, 127,80),
    "Индийский красный": (205,92,92),
    "Светлый коралл": (240, 128, 128),
    "Темный лосось": (233, 150, 122),
    "Лосось": (250, 128, 114),
    "Светлый лосось": (255, 160, 122),
    "Оранжево красный": (255,69,0),
    "Темно оранжевый": (255,140,0),
    "Апельсин": (255,165,0),
    "Золото": (255, 215, 0),
    "Темно золотой жезл": (184, 134, 11),
    "Золотой жезл": (218, 165, 32),
    "Бледно золотой жезл": (238, 232, 170),
    "Темный хаки": (189, 183, 107),
    "Цвет хаки": (240, 230, 140),
    "Оливковый": (128,128,0),
    "Желтый": (255,255,0),
    "Желтый зеленый": (154, 205, 50),
    "Темно оливково(зеленый": (85, 107,47),
    "Оливковый": (107, 142,35),
    "Газон зеленый": (124, 252,00),
    "Повторное использование диаграммы": (127,255,0),
    "Желто зеленый": (173, 255,47),
    "Темно зеленый": (0,100,0),
    "Зеленый": (0,128,0),
    "Зеленый лес": (34, 139,34),
    "Лайм": (0,255,0),
    "Зеленый лайм": (50, 205,50),
    "Светло зеленый": (144, 238, 144),
    "Бледно зеленый": (152, 251, 152),
    "Темно зеленый": (143, 188, 143),
    "Средний весенний зеленый": (0,250,154),
    "Весенний зеленый": (0,255,127),
    "Цвет морской волны": (46, 139,87),
    "Средний аквамарин": (102, 205, 170),
    "Средний морской зеленый": (60, 179, 113),
    "Светло зеленый": (32, 178, 170),
    "Темно серый": (47,79,79),
    "Бирюзовый": (0,128,128),
    "Темно(голубой": (0,139,139),
    "Аква": (0,255,255),
    "Голубой": (0,255,255),
    "Светло голубой": (224, 255, 255),
    "Темно бирюзовый": (0, 206, 209),
    "Бирюзовый": (64, 224, 208),
    "Средняя бирюза": (72, 209, 204),
    "Бледно бирюзовый": (175, 238, 238),
    "Аквамарин": (127, 255, 212),
    "Синий порошок": (176, 224, 230),
    "Кадетский синий": (95, 158, 160),
    "Стальной синий": (70, 130, 180),
    "Кукуруза цветок синий": (100, 149, 237),
    "Темно синий": (0,191,255),
    "Доджер синий": (30, 144, 255),
    "Светло синий": (173, 216, 230),
    "Голубое небо": (135, 206, 235),
    "Светло голубой": (135, 206, 250),
    "Темно синий": (25,25,112),
    "Флот": (0,0,128),
    "Темно синий": (0,0,139),
    "Средний синий": (0,0,205),
    "Синий": (0,0,255),
    "Королевский синий": (65, 105, 225),
    "Сине фиолетовый": (138,43,226),
    "Индиго": (75, 0, 130),
    "Темно синий": (72,61,139),
    "Сланцево синий": (106, 90, 205),
    "Средний грифельно(синий": (123, 104, 238),
    "Средний фиолетовый": (147, 112, 219),
    "Темно пурпурный": (139, 0, 139),
    "Темно фиолетовый": (148, 0, 211),
    "Темная орхидея": (153, 50, 204),
    "Средняя орхидея": (186,85, 211),
    "Фиолетовый": (128,0,128),
    "Чертополох": (216, 191, 216),
    "Слива": (221, 160, 221),
    "Виолетта": (238, 130, 238),
    "Пурпурный/фуксия": (255, 0, 255),
    "Орхидея": (218, 112,214),
    "Средне фиолетовый красный": (199, 21, 133),
    "Бледно фиолетовый красный": (219, 112, 147),
    "Темно розовый": (255, 20, 147),
    "Ярко розовый": (255, 105, 180),
    "Светло розовый": (255, 182, 193),
    "Розовый": (255, 192, 203),
    "Античный белый": (250, 235, 215),
    "Бежевый": (245, 245, 220),
    "Бисквит": (255, 228, 196),
    "Бланшированный миндаль": (255, 235, 205),
    "Пшеница": (245, 222, 179),
    "Кукурузные рыльца": (255, 248, 220),
    "Лимонный шифон": (255, 250, 205),
    "Светло золотой жезл желтый": (250, 250, 210),
    "Светло желтого": (255, 255, 224),
    "Седло коричневый": (139,69,19),
    "Сиена": (160,82,45),
    "Шоколад": (210,105,30),
    "Перу": (205, 133,63),
    "Песочно коричневый": (244, 164,96),
    "Крепкое дерево": (222, 184, 135),
    "Загар": (210, 180, 140),
    "Розово коричневый": (188, 143, 143),
    "Мокасины": (255, 228, 181),
    "Навахо белый": (255, 222, 173),
    "Персиковый слой": (255, 218, 185),
    "Туманная роза": (255, 228, 225),
    "Лавандовый румянец": (255, 240, 245),
    "Белье": (250, 240, 230),
    "Старое кружево": (253, 245, 230),
    "Кнут из папайи": (255, 239, 213),
    "Морская ракушка": (255, 245, 238),
    "Мятный крем": (245, 255, 250),
    "Шифер серый": (112, 128, 144),
    "Светло серый": (119, 136, 153),
    "Светло стальной синий": (176, 196, 222),
    "Лаванда": (230, 230, 250),
    "Цветочный белый": (255, 250, 240),
    "Алиса Блю": (240, 248, 255),
    "Призрачный белый": (248, 248, 255),
    "Нектар": (240, 255, 240),
    "Слоновая кость": (255, 255, 240),
    "Лазурный": (240, 255, 255),
    "Снег": (255, 250, 250),
    "Черный": (0,0,0),
    "Тускло серый / тускло серый": (105, 105, 105),
    "Серый": (128, 128, 128),
    "Темно серый / темно(серый": (169, 169, 169),
    "Серебряный": (192, 192, 192),
    "Светло серый / светло(серый": (211, 211, 211),
    "Gainsboro": (220, 220, 220),
    "Белый дым": (245, 245, 245),
    "Белый": (255, 255, 255)
}

def cos_dist(rgb, approximation):
    numerator = sum( [rgb[i]*approximation[i] for i in range(3)]   )
    denominator = math.sqrt( sum([rgb[i]**2 for i in range(3)] )) * math.sqrt( sum([approximation[i]**2 for i in range(3)] ))
    if denominator == 0:
        denominator = 0.01
    ratio = numerator/denominator
    if ratio > 1:
        ratio = 1
    return math.acos(ratio)



color_database = []
for r in range(0, 256, 63):
    for g in range(0, 256, 63):
        for b in range(0, 256, 63):
            color_database.append((r, g, b))
print(color_database, "\n", len(color_database))


""" dist = 1; k = 0
test_color = (121, 81, 15)
for i in range(len(color_database)):
    test_dist = cos_dist(test_color, color_database[i])
    if test_dist < dist:
        dist = test_dist
        k = i
    elif test_dist == dist:
        euclid_i = (test_color[0]-color_database[i][0])**2 + (test_color[1]-color_database[i][1])**2 + (test_color[2]-color_database[i][2])**2
        euclid_k = (test_color[0]-color_database[k][0])**2 + (test_color[1]-color_database[k][1])**2 + (test_color[2]-color_database[k][2])**2
        if euclid_i < euclid_k:
            k=i


print(color_database[k], k) """


""" im = Image.new('RGB', (5, 25))
im.putdata(color_database)
#im_rotate = im.rotate(-90)
#im_flip = im_rotate.transpose(Image.FLIP_LEFT_RIGHT)
im.save('palette.png')
 """


print(round(1.38, 0))